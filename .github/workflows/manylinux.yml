name: Manylinux 2.28

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  # Build job for manylinux_2_28 image
  build-manylinux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.4.1

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      # Install the cosign tool except on PR
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Dockerfile for platform
        run: |
          if [ "${{ matrix.platform }}" = "linux/amd64" ]; then
            echo "DOCKERFILE=docker/Dockerfile.manylinux_2_28_X64" >> $GITHUB_ENV
          else
            echo "DOCKERFILE=docker/Dockerfile.manylinux_2_28_ARM64" >> $GITHUB_ENV
          fi

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          provenance: false
          sbom: false
          file: ${{ env.DOCKERFILE }}
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/insight-platform/manylinux_2_28
          outputs: type=image,push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests-manylinux
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests-manylinux/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-manylinux-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests-manylinux/*
          if-no-files-found: error
          retention-days: 1


  # Merge job for manylinux_2_28 image
  merge-manylinux:
    runs-on: ubuntu-latest
    needs:
      - build-manylinux
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.4.1

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests-manylinux
          pattern: digests-manylinux-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests-manylinux
        run: |
          docker buildx imagetools create \
            -t ghcr.io/insight-platform/manylinux_2_28:${{ env.GITHUB_REF_SLUG }} \
            $(printf 'ghcr.io/insight-platform/manylinux_2_28@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/insight-platform/manylinux_2_28:${{ env.GITHUB_REF_SLUG }}

